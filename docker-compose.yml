version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: librivault-db-new
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-Harshini@258}
      MYSQL_DATABASE: ${DB_NAME:-librivault_db}
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - librivault-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-Harshini@258}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: librivault-backend
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-librivault_db}
      - DB_USERNAME=${DB_USERNAME:-librivault}
      - DB_PASSWORD=${DB_PASSWORD:-Harshini@258}
      - JWT_SECRET=${JWT_SECRET:-librivault-super-secret-key-for-jwt-token-generation-minimum-32-chars}
      - CORS_ALLOWED_ORIGINS=http://localhost:4200
    ports:
      - "8080:8080"
    networks:
      - librivault-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/ready"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 90s

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: librivault-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "4200:4200"
    networks:
      - librivault-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mysql_data:

networks:
  librivault-network:
    driver: bridge